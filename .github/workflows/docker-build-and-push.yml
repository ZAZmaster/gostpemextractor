name: Build docker and push

on:
  release:
    types: [published]
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

#    if: "!contains(github.event.head_commit.message, '#nobuild')"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Make docker image tag
      id: prepare
      run: |
        export VERSION=${GITHUB_REF#refs/tags/}
        echo "${GITHUB_REF}"
        echo "${VERSION}"
        TAG="iliadmitriev/privkey2012:${VERSION}"
        TAGS="${TAG},iliadmitriev/privkey2012:latest"
        echo ::set-output name=tags::${TAGS}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.prepare.outputs.tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
